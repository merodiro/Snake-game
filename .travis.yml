# Based on the "trust" template v0.1.2
# https://github.com/japaric/trust/tree/v0.1.2

dist: trusty
language: rust
services: docker
sudo: required

# TODO Rust builds on stable by default, this can be
# overridden on a case by case basis down below.

env:
  global:
    # TODO Update this to match the name of your project.
    - CRATE_NAME=snake

matrix:
  # TODO These are all the build jobs. Adjust as necessary. Comment out what you
  # don't need
  include:

    # Linux
    - env: TARGET=i686-unknown-linux-gnu
    - env: TARGET=i686-unknown-linux-musl
    - env: TARGET=x86_64-unknown-linux-gnu
    - env: TARGET=x86_64-unknown-linux-musl

    # OSX
    - env: TARGET=i686-apple-darwin
      os: osx
    - env: TARGET=x86_64-apple-darwin
      os: osx

    # Bare metal
    # These targets don't support std and as such are likely not suitable for
    # most crates.
    # - env: TARGET=thumbv6m-none-eabi
    # - env: TARGET=thumbv7em-none-eabi
    # - env: TARGET=thumbv7em-none-eabihf
    # - env: TARGET=thumbv7m-none-eabi

    # Testing other channels
    - env: TARGET=x86_64-unknown-linux-gnu
      rust: nightly
    - env: TARGET=x86_64-apple-darwin
      os: osx
      rust: nightly

before_install:
  - set -e
  - rustup self update

install:
  - sh ci/install.sh
  - source ~/.cargo/env || true

script:
  - bash ci/script.sh

after_script: set +e

before_deploy:
  - sh ci/before_deploy.sh

deploy:
  # TODO update `api_key.secure`
  # - Create a `public_repo` GitHub token. Go to: https://github.com/settings/tokens/new
  # - Encrypt it: `travis encrypt 0123456789012345678901234567890123456789
  # - Paste the output down here
  api_key: 
    secure: XHCepbXiQ/rHyarX97tj90uB8pZ0B6FI+FBo9/l/UXkT+KA8Zuagph7a/EQK0cMRrQBqoAhb0LNCba/z1yXDBpmDoTPxjzatWW6ysg3I2973gIfrWYBOD9eCaLiVijcZdu4Mp0rcfskg1DtCm+ppPZ1BRPYIkqmu5gPatI8F767MkQK7xnKz70xG3b3aWZPBf+PQaGika+Z/d86NrotBDFihsXv44HRmg1LY7aWDbLsYF+GslwzAZeI04fTR1LofGWMQK7/Og3OanT3rW4jzEInNhc4u06mppGhNDP8lx5EcxXg20GS7rB6hqSQfMNOG/d24Je5L0bxtjuiuqZb1B57PxZZJffOPZqVeB6Q/XuRw2tsYjsQafZWTi5J2+TqaSQOy9pW0+U7nrcajctq2E3g8gkNensAvCIGIcIW20ckHCzMErwC44B9xbyuljGL58ONeuzXGLsAk9855duAA3yN/1mMWESyXSySjQ95EkZZid5Rt8ZL1p4VxYjo2e2vEmEtRoC37kyAHpfcLzMEHc85R05pPR0eViZLlk9cGCfKjZGefHdVb38CxkcNPdQjYQQmWaFDjiJxsXmdWrSz7x7jl2oOCCL0ih6GG3FDzZEuyRYJPYSgSWqYTvLavkQgDZG2w012NRYWuMAJ0Jx86E7lFtdLqUn9Q8p0+dlqlFYY=
  file_glob: true
  file: $CRATE_NAME-$TRAVIS_TAG-$TARGET.*
  on:
    # TODO Here you can pick which targets will generate binary releases
    # In this example, there are some targets that are tested using the stable
    # and nightly channels. This condition makes sure there is only one release
    # for such targets and that's generated using the stable channel
    condition: $TRAVIS_RUST_VERSION = stable
    tags: true
  provider: releases
  skip_cleanup: true

cache: cargo
before_cache:
  # Travis can't cache files that are not readable by "others"
  - chmod -R a+r $HOME/.cargo

branches:
  only:
    # release tags
    - /^v\d+\.\d+\.\d+.*$/
    - master

notifications:
  email:
    on_success: never
